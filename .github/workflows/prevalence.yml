name: Prevalence

on:
  schedule:
    # 7:00am Pacific = 14:00 UTC
    - cron:  '0 14 * * *'
  workflow_dispatch:

jobs:
  prevalence:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout git repo (with full history)
      uses: actions/checkout@v2
      with:
          fetch-depth: 0
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN_JEREMY }}

    - name: Set up python
      uses: actions/setup-python@v2

    - name: Set up virtualenv
      uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv
      with:
        requirement_files: requirements-manual.txt

    - name: Set up pip cache
      uses: syphar/restore-pip-download-cache@v1
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

    - name: Install python dependencies
      run: pip install -r requirements-manual.txt
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      # where I left off: trying to get the virtualenv in scope inside 
      # ideas: 
      # use `source ./scripts/prevalence_helper` to pass the virtualenv into the new script
      # need to find someway to test that
      # need to conditionally  activate virtualenv if it's already active
      # figure out what the virtualenv github action path is and just activate it withint prevalence_helper
      # maybe pass virtual env in as an opt arg

    - name: Set up node
      uses: actions/setup-node@v2

    - name: Set up yarn
      run: yarn install
      
    - name: Run update preavlence and merge results
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN_JEREMY }}
        # VENV_DIR: ${{ steps.cache-virtualenv.outputs.virtualenv-directory }}
      run: yarn prevalence -c -b -k ${{ secrets.COVID_ACT_NOW_API_KEY }} -v ${{ steps.cache-virtualenv.outputs.virtualenv-directory }}

