name: Prevalence

on:
  schedule:
    # 7:00am Pacific = 14:00 UTC
    - cron:  '0 14 * * *'
  workflow_dispatch:

jobs:
  prevalence:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout git repo (with full history)
      uses: actions/checkout@v2
      with:
          fetch-depth: 0

    - name: Set up python
      uses: actions/setup-python@v2

    - name: Set up virtualenv
      uses: syphar/restore-virtualenv@v1
      id: cache-virtualenv
      with:
        requirement_files: requirements-manual.txt

    - name: Set up pip cache
      uses: syphar/restore-pip-download-cache@v1
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

    - name: Install python dependencies
      run: pip install -r requirements-manual.txt
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'

    - name: Run prevalence update
      env:
        CAN_API_KEY: ${{ secrets.COVID_ACT_NOW_API_KEY }}
      run: |
        CAN_API_KEY="$CAN_API_KEY" python3 update_prevalence.py


    # We do this after the update_prevalence script in case we are running it from a branch (during testing)
    - name: Create a branch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git stash
        git checkout main
        git stash pop
        git push origin --delete auto-update-prevalence &> /dev/null || true
        git checkout -b auto-update-prevalence
        git push --set-upstream origin auto-update-prevalence

    # Run linter through directly yarn because it's confifgured properly
    - name: Setting up yarn
      uses: borales/actions-yarn@v2.3.0
      with:
        cmd: install
    - name: Running linter fixes
      uses: borales/actions-yarn@v2.3.0
      with:
        cmd: fix

    - name: Commit changes
      uses: EndBug/add-and-commit@v7
      with:
        author_name: Auto Prevalence Update Bot
        author_email: info@microcovid.org
        branch: auto-update-prevalence
        message: "Automatic prevalence update $TODAY"

    - name: Create the pull request
      run: gh pr create --fill
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
    - name: Enable automerge on the pull request
      run: echo "$PR_URL" && gh pr merge --auto --merge "$PR_URL"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
